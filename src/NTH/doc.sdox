<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<SDConfig>
  <section guid="9e8e8bc4-bfdd-11e3-a297-170828518c08">
    <item key="HeaderBackground" value="#3F72DB" />
    <item key="SubHeaderBackground" value="#2862db" />
    <item key="Color" value="#FFFFFF" />
    <item key="DisableSequenceDiagrams" value="False" />
  </section>
  <section guid="feacbce2-8290-4d90-bb05-373b9d7dbbfc">
    <item key="ConfigFileName" value="doc" />
    <item key="PathToConfig" value=".\doc.sdox" />
    <item key="LastBuild" value="25.6.2014 - 22:44" />
    <item key="ProjectName" value="NTH-Library" />
    <item key="ProjectUrl" value="https://github.com/nikeee/nth" />
    <item key="Author" value="Niklas Mollenhauer" />
    <item key="AuthorUrl" value="holz.nu" />
    <item key="VersionNumber" value="1.0.3" />
    <item key="InputFile" value=".\NTH.sln" />
    <item key="OutputPath" value="\doc" />
    <item key="DocLanguage" value="en" />
    <item key="ExcludedIdentifiers" value="field#NTH.ByteSize._byteCount;field#NTH.ByteSize._zero;NTH.ByteSize.Format(System.Int64, NTH.PrefixType);field#NTH.Int32Extensions.Prefix;field#NTH.IntPtrExtensions.Prefix;field#NTH.NativeMethods.Crypt32;field#NTH.NativeMethods.Shlwapi;NTH.Analysis.Diff&lt;T&gt;.GetDiffTypeStringRepresentation(NTH.Analysis.DiffType);NTH.Analysis.DiffFinder&lt;T&gt;.BisectSplit(T[], T[], System.Int32, System.Int32);NTH.Analysis.DiffFinder&lt;T&gt;.ComputeDiffInternal(T[], T[]);NTH.Analysis.DiffFinder&lt;T&gt;.GetCommonPostfixLength(T[], T[]);NTH.Analysis.DiffFinder&lt;T&gt;.GetCommonPrefixLength(T[], T[]);NTH.Analysis.DiffFinder&lt;T&gt;.HalfMatch(T[], T[]);field#NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;._newLineForDiff;NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;.PrintItemDiff(System.ConsoleColor, System.String, T);NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;.WriteColor&lt;U&gt;(System.ConsoleColor, U);NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;.WriteColorNewLine&lt;U&gt;(System.ConsoleColor, U);field#NTH.Diagnostics.CommandLine._current;NTH.Diagnostics.CommandLine.CreateCurrentCommandLine;field#NTH.IO.ByteExtensions.BitReverseTable;field#NTH.Security.Cryptography.Crc32._hash;field#NTH.Security.Cryptography.Crc32._seed;field#NTH.Security.Cryptography.Crc32._table;field#NTH.Security.Cryptography.Crc32.defaultTable;NTH.Security.Cryptography.Crc32.CalculateHash(System.UInt32[], System.UInt32, System.Collections.Generic.IList, System.Int32, System.Int32);NTH.Security.Cryptography.Crc32.InitializeTable(System.UInt32);NTH.Security.Cryptography.Crc32.UInt32ToBigEndianBytes(System.UInt32);NTH.Security.Cryptography.RSACryptoServiceProviderExtensions.ConvertDerToRsa(System.Byte[]);NTH.Security.Cryptography.RSACryptoServiceProviderExtensions.ConvertPemToDer(System.String);NTH.Security.Cryptography.RSACryptoServiceProviderExtensions.GetPrivateKeyDer(System.Byte[]);NTH.Security.Cryptography.RSACryptoServiceProviderExtensions.GetPublicKeyBlobFromRsa(System.Byte[]);field#NTH.Tests.Properties.Resources.resourceCulture;field#NTH.Tests.Properties.Resources.resourceMan;field#NTH.Tests.Security.Cryptography.RSACryptoServiceProviderExtensionsTests.DataToSign;field#NTH.Tests.Security.Cryptography.RSACryptoServiceProviderExtensionsTests.dataToSignString;NTH.Tests.Text.StringExtensionsTests.LevenshteinDistanceToExplicit(NTH.Text.LevenshteinMethod);field#NTH.Text.DamerauLevenshteinDistanceMetric._currentRow;field#NTH.Text.DamerauLevenshteinDistanceMetric._previousRow;field#NTH.Text.DamerauLevenshteinDistanceMetric._transpositionRow;field#NTH.Text.DamerauLevenshteinDistanceMetric.DefaultLength;NTH.Text.Formatting.ByteSizeFormatProvider.HandleOtherFormats(System.String, System.Object);NTH.Text.Formatting.ByteSizeFormatter.FixDecimalPrefix(System.String&amp;);NTH.Text.Formatting.ByteSizeFormatter.WindowsInternal(System.Int64);NTH.NativeMethods;NTH.NativeMethods.CryptDecodeObject(NTH.NativeTypes.CryptEncodingFlags, System.IntPtr, System.Byte[], System.Int32, NTH.NativeTypes.CryptDecodeFlags, System.Byte[], System.UInt32&amp;);NTH.NativeMethods.CryptDecodeObjectEx(NTH.NativeTypes.CryptEncodingFlags, System.String, System.Byte[], System.UInt32, System.UInt32, System.IntPtr, System.Byte[]&amp;, System.Byte[]&amp;);NTH.NativeMethods.CryptStringToBinary(System.String, System.Int32, NTH.NativeTypes.CryptStringFlags, System.Byte[], System.UInt32&amp;, System.UInt32&amp;, System.UInt32&amp;);NTH.NativeMethods.StrFormatByteSize(System.Int64, System.Text.StringBuilder, System.Int32);NTH.Analysis.ArrayExtensions&lt;T&gt;;NTH.Analysis.ArrayExtensions&lt;T&gt;.IndexOf(T[], T);NTH.Analysis.ArrayExtensions&lt;T&gt;.Substring(T[], System.Int32);NTH.Analysis.Rendering.ConsoleCharDiffRenderer;NTH.Analysis.Rendering.ConsoleCharDiffRenderer..ctor(System.Boolean);NTH.Analysis.Rendering.ConsoleCharDiffRenderer.Render(System.Collections.Generic.List);NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;;NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;..ctor(System.Boolean);NTH.Analysis.Rendering.ConsoleDiffRenderer&lt;T&gt;.PrintCharDiff(NTH.Analysis.DiffType, T);NTH.Analysis.Rendering.GenericConsoleDiffRenderer&lt;T&gt;;NTH.Analysis.Rendering.GenericConsoleDiffRenderer&lt;T&gt;..ctor(System.Boolean);NTH.Analysis.Rendering.GenericConsoleDiffRenderer&lt;T&gt;.Render(System.Collections.Generic.List);NTH.Analysis.Rendering.IDiffRenderer&lt;T&gt;;NTH.Analysis.Rendering;NTH.Analysis.Rendering.IDiffRenderer&lt;T&gt;.Render(System.Collections.Generic.List);NTH.Diagnostics.ArgumentList.GetFormattedArguments;NTH.Diagnostics.CommandLineUtil;NTH.Diagnostics.CommandLineUtil.FormatItem(System.Text.StringBuilder, System.String);NTH.Diagnostics.CommandLineUtil.ReadItem(System.String, System.String&amp;);NTH.NativeTypes.AlgorithmIdentifier;field#NTH.NativeTypes.AlgorithmIdentifier.ObjectId;field#NTH.NativeTypes.AlgorithmIdentifier.Parameters;NTH.NativeTypes.AlgorithmIdentifier..ctor;NTH.NativeTypes.BitBlob;field#NTH.NativeTypes.BitBlob.cbData;field#NTH.NativeTypes.BitBlob.cUnusedBits;field#NTH.NativeTypes.BitBlob.pbData;NTH.NativeTypes.BitBlob..ctor;NTH.NativeTypes.CryptDecodeFlags;field#NTH.NativeTypes.CryptDecodeFlags.Alloc;field#NTH.NativeTypes.CryptDecodeFlags.None;NTH.NativeTypes.CryptDecodeFlags..ctor;NTH.NativeTypes.CryptEncodingFlags;field#NTH.NativeTypes.CryptEncodingFlags.Pkcs7AsnEncoding;field#NTH.NativeTypes.CryptEncodingFlags.X509AsnEncoding;NTH.NativeTypes.CryptEncodingFlags..ctor;NTH.NativeTypes.CryptOutputTypes;field#NTH.NativeTypes.CryptOutputTypes.PkcsPrivateKeyInfo;field#NTH.NativeTypes.CryptOutputTypes.PkcsRsaPrivateKey;field#NTH.NativeTypes.CryptOutputTypes.RsaCspPublicKeyBlob;field#NTH.NativeTypes.CryptOutputTypes.X509PublicKeyInfo;NTH.NativeTypes.CryptOutputTypes..ctor;NTH.NativeTypes.CryptStringFlags;field#NTH.NativeTypes.CryptStringFlags.Any;field#NTH.NativeTypes.CryptStringFlags.Base64;field#NTH.NativeTypes.CryptStringFlags.Base64Any;field#NTH.NativeTypes.CryptStringFlags.Base64Header;field#NTH.NativeTypes.CryptStringFlags.Base64RequestHeader;field#NTH.NativeTypes.CryptStringFlags.Base64X509CRLHeader;field#NTH.NativeTypes.CryptStringFlags.Binary;field#NTH.NativeTypes.CryptStringFlags.Hex;field#NTH.NativeTypes.CryptStringFlags.HexAddr;field#NTH.NativeTypes.CryptStringFlags.HexAny;field#NTH.NativeTypes.CryptStringFlags.HexAscii;field#NTH.NativeTypes.CryptStringFlags.HexAsciiAddr;field#NTH.NativeTypes.CryptStringFlags.HexRaw;field#NTH.NativeTypes.CryptStringFlags.NoCr;field#NTH.NativeTypes.CryptStringFlags.NoCrLf;NTH.NativeTypes.CryptStringFlags..ctor;NTH.NativeTypes.ObjectIdBlob;field#NTH.NativeTypes.ObjectIdBlob.cbData;field#NTH.NativeTypes.ObjectIdBlob.pbData;NTH.NativeTypes.ObjectIdBlob..ctor;NTH.NativeTypes.PublicKeyCertInfo;NTH.NativeTypes;field#NTH.NativeTypes.PublicKeyCertInfo.Algorithm;field#NTH.NativeTypes.PublicKeyCertInfo.PublicKey;NTH.NativeTypes.PublicKeyCertInfo..ctor;NTH.Tests.Resources;NTH.Tests.Resources..ctor;NTH.Tests.Resources.GetResource(System.String);NTH.Tests.SampleEnum;field#NTH.Tests.SampleEnum.Spitze;field#NTH.Tests.SampleEnum.Top;NTH.Tests.SampleEnum..ctor;NTH.Tests.Properties.Resources;NTH.Tests.Properties;NTH.Tests.Properties.Resources..ctor;property#NTH.Tests.Properties.Resources.Culture;property#NTH.Tests.Properties.Resources.ResourceManager;property#NTH.Tests.Properties.Resources.RSACryptoServiceProviderExtensionPrivateKey;property#NTH.Tests.Properties.Resources.RSACryptoServiceProviderExtensionPrivateKey1;property#NTH.Tests.Properties.Resources.RSACryptoServiceProviderExtensionPublicKey;property#NTH.Tests.Properties.Resources.RSACryptoServiceProviderExtensionPublicKey1;NTH.Text.DamerauLevenshteinDistanceMetric;NTH.Text.DamerauLevenshteinDistanceMetric..ctor;NTH.Text.DamerauLevenshteinDistanceMetric.GetDistance(System.String, System.String, System.Int32);NTH.Text.LevenshteinCalculator;NTH.Text.LevenshteinCalculator.CalculateMatrix(System.String, System.String);NTH.Text.LevenshteinCalculator.CalculateRecursive(System.String, System.String);NTH.Text.LevenshteinCalculator.CalculateVector(System.String, System.String)" />
    <item key="ActivatedExporters" value="Html" />
  </section>
</SDConfig>